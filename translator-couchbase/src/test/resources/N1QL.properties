<?xml version="1.0" encoding="UTF-8"?>
<properties>
   <entry key="n1ql.testSelect.Customer_SavedAddresses">SELECT `$cb_c1_documentID`, `$cb_c2_Customer_SavedAddresses_idx`, `$cb_c3_Customer_SavedAddresses` FROM `test` `$cb_t2` UNNEST `$cb_t2`.`SavedAddresses` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t2`).id, `$cb_c2_Customer_SavedAddresses_idx` = UNNEST_POSITION(`$cb_t1`), `$cb_c3_Customer_SavedAddresses` = `$cb_t1`</entry>
   <entry key="n1ql.testPKColumn.T3">SELECT `$cb_c1_documentID` FROM `T3` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t1`).id</entry>
   <entry key="n1ql.ConversionFunctions.T2">SELECT TOSTRING(`$cb_c1_attr_long`) FROM `T2` `$cb_t1` LET `$cb_c1_attr_long` = `$cb_t1`.`attr_long`</entry>
   <entry key="n1ql.testNestedArray.T3_nestedArray_dim2_dim3_dim4">SELECT `$cb_c1_documentID`, `$cb_c2_T3_nestedArray_idx`, `$cb_c3_T3_nestedArray_dim2_idx`, `$cb_c4_T3_nestedArray_dim2_dim3_idx`, `$cb_c5_T3_nestedArray_dim2_dim3_dim4_idx`, `$cb_c6_T3_nestedArray_dim2_dim3_dim4` FROM `T3` `$cb_t5` UNNEST `$cb_t5`.`nestedArray` `$cb_t4` UNNEST `$cb_t4` `$cb_t3` UNNEST `$cb_t3` `$cb_t2` UNNEST `$cb_t2` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t5`).id, `$cb_c2_T3_nestedArray_idx` = UNNEST_POSITION(`$cb_t4`), `$cb_c3_T3_nestedArray_dim2_idx` = UNNEST_POSITION(`$cb_t3`), `$cb_c4_T3_nestedArray_dim2_dim3_idx` = UNNEST_POSITION(`$cb_t2`), `$cb_c5_T3_nestedArray_dim2_dim3_dim4_idx` = UNNEST_POSITION(`$cb_t1`), `$cb_c6_T3_nestedArray_dim2_dim3_dim4` = `$cb_t1`</entry>
   <entry key="n1ql.StringFunctions.TITLE">SELECT TITLE(`$cb_c1_attr_string`) FROM `T2` `$cb_t1` LET `$cb_c1_attr_string` = `$cb_t1`.`attr_string`</entry>
   <entry key="n1ql.testLimitOffsetClause.Customer.limitoffset">SELECT `$cb_c1_Name` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name` WHERE `$cb_t1`.`type` = 'Customer' LIMIT 2 OFFSET 2</entry>
   <entry key="n1ql.testNestedArray.T3_nestedArray_dim2">SELECT `$cb_c1_documentID`, `$cb_c2_T3_nestedArray_idx`, `$cb_c3_T3_nestedArray_dim2_idx`, `$cb_c4_T3_nestedArray_dim2` FROM `T3` `$cb_t3` UNNEST `$cb_t3`.`nestedArray` `$cb_t2` UNNEST `$cb_t2` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t3`).id, `$cb_c2_T3_nestedArray_idx` = UNNEST_POSITION(`$cb_t2`), `$cb_c3_T3_nestedArray_dim2_idx` = UNNEST_POSITION(`$cb_t1`), `$cb_c4_T3_nestedArray_dim2` = `$cb_t1`</entry>
   <entry key="n1ql.testOrderByClause.Customer.Unrelated">SELECT `$cb_c1_type` FROM `test` `$cb_t1` LET `$cb_c1_type` = `$cb_t1`.`type` WHERE `$cb_c1_type` = 'Customer' ORDER BY `$cb_t1`.`Name`</entry>
   <entry key="n1ql.StringFunctions.CONTAINS">SELECT CONTAINS(`$cb_c1_attr_string`, 'is') FROM `T2` `$cb_t1` LET `$cb_c1_attr_string` = `$cb_t1`.`attr_string`</entry>
   <entry key="n1ql.Procedures.">SELECT result FROM `test` AS result WHERE META().id LIKE 'customer'</entry>
   <entry key="n1ql.testNumbericFunctions.CEILING">SELECT CEIL(`$cb_c1_attr_double`) FROM `T2` `$cb_t1` LET `$cb_c1_attr_double` = `$cb_t1`.`attr_double`</entry>
   <entry key="n1ql.StringFunctions.UCASE">SELECT UPPER(`$cb_c1_attr_string`) FROM `T2` `$cb_t1` LET `$cb_c1_attr_string` = `$cb_t1`.`attr_string`</entry>
   <entry key="n1ql.StringFunctions.RTRIM">SELECT RTRIM(`$cb_c1_attr_string`, 'value') FROM `T2` `$cb_t1` LET `$cb_c1_attr_string` = `$cb_t1`.`attr_string`</entry>
   <entry key="n1ql.testSelect.Customer">SELECT `$cb_c1_documentID`, `$cb_c2_ID`, `$cb_c3_type`, `$cb_c4_Name` FROM `test` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t1`).id, `$cb_c2_ID` = `$cb_t1`.`ID`, `$cb_c3_type` = `$cb_t1`.`type`, `$cb_c4_Name` = `$cb_t1`.`Name` WHERE `$cb_c3_type` = 'Customer'</entry>
   <entry key="n1ql.testOrderByClause.Customer">SELECT `$cb_c1_Name`, `$cb_c2_type` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name`, `$cb_c2_type` = `$cb_t1`.`type` WHERE `$cb_c2_type` = 'Customer' ORDER BY `$cb_c1_Name`</entry>
   <entry key="n1ql.StringFunctions.POSITION">SELECT POSITION(`$cb_c1_attr_string`, 'is') FROM `T2` `$cb_t1` LET `$cb_c1_attr_string` = `$cb_t1`.`attr_string`</entry>
   <entry key="n1ql.Procedures.getDocuments">SELECT META().id AS id, result FROM `test` AS result USE PRIMARY KEYS 'customer'</entry>
   <entry key="n1ql.testGroupByClause.Name">SELECT `$cb_c1_Name`, COUNT(*) FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name` WHERE `$cb_t1`.`type` = 'Customer' GROUP BY `$cb_c1_Name`</entry>
   <entry key="n1ql.testLimitOffsetClause.Customer.offset">SELECT `$cb_c1_Name` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name` WHERE `$cb_t1`.`type` = 'Customer' LIMIT 2147483647 OFFSET 2</entry>
   <entry key="n1ql.DateFunctions.CLOCK_STR.T2">SELECT CLOCK_STR() FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testWhereClause.documentID">SELECT `$cb_c1_Name`, `$cb_c2_type` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name`, `$cb_c2_type` = `$cb_t1`.`type`, `$cb_c3_documentID` = META(`$cb_t1`).id WHERE `$cb_c3_documentID` = 'customer' AND `$cb_c2_type` = 'Customer'</entry>
   <entry key="n1ql.testNestedArray.T3_nestedArray">SELECT `$cb_c1_documentID`, `$cb_c2_T3_nestedArray_idx`, `$cb_c3_T3_nestedArray` FROM `T3` `$cb_t2` UNNEST `$cb_t2`.`nestedArray` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t2`).id, `$cb_c2_T3_nestedArray_idx` = UNNEST_POSITION(`$cb_t1`), `$cb_c3_T3_nestedArray` = `$cb_t1`</entry>
   <entry key="n1ql.testNestedArray.T3_nestedArray_dim2_dim3">SELECT `$cb_c1_documentID`, `$cb_c2_T3_nestedArray_idx`, `$cb_c3_T3_nestedArray_dim2_idx`, `$cb_c4_T3_nestedArray_dim2_dim3_idx`, `$cb_c5_T3_nestedArray_dim2_dim3` FROM `T3` `$cb_t4` UNNEST `$cb_t4`.`nestedArray` `$cb_t3` UNNEST `$cb_t3` `$cb_t2` UNNEST `$cb_t2` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t4`).id, `$cb_c2_T3_nestedArray_idx` = UNNEST_POSITION(`$cb_t3`), `$cb_c3_T3_nestedArray_dim2_idx` = UNNEST_POSITION(`$cb_t2`), `$cb_c4_T3_nestedArray_dim2_dim3_idx` = UNNEST_POSITION(`$cb_t1`), `$cb_c5_T3_nestedArray_dim2_dim3` = `$cb_t1`</entry>
   <entry key="n1ql.testSelect.Oder_Items">SELECT `$cb_c1_documentID`, `$cb_c2_Oder_Items_idx`, `$cb_c3_Oder_Items_Quantity`, `$cb_c4_Oder_Items_ItemID` FROM `test` `$cb_t2` UNNEST `$cb_t2`.`Items` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t2`).id, `$cb_c2_Oder_Items_idx` = UNNEST_POSITION(`$cb_t1`), `$cb_c3_Oder_Items_Quantity` = `$cb_t1`.`Quantity`, `$cb_c4_Oder_Items_ItemID` = `$cb_t1`.`ItemID`</entry>
   <entry key="n1ql.testPKColumn.T3_nestedArray_dim2_dim3_dim4">SELECT `$cb_c1_documentID` FROM `T3` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t1`).id</entry>
   <entry key="n1ql.Procedures.getDocument">SELECT result FROM `test` AS result USE PRIMARY KEYS 'customer'</entry>
   <entry key="n1ql.DateFunctions.DATE_ADD_MILLIS">SELECT DATE_ADD_MILLIS(1488873653696, 2, 'century') FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.DateFunctions.CLOCK_MILLIS">SELECT CLOCK_MILLIS() FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testNestedArray.T3">SELECT `$cb_c1_documentID`, `$cb_c2_nestedJson_nestedJson_nestedJson_nestedJson`, `$cb_c3_nestedJson_nestedJson_nestedJson_Dimension`, `$cb_c4_nestedJson_nestedJson_Dimension`, `$cb_c5_nestedJson_Dimension`, `$cb_c6_Name` FROM `T3` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t1`).id, `$cb_c2_nestedJson_nestedJson_nestedJson_nestedJson` = `$cb_t1`.`nestedJson`.`nestedJson`.`nestedJson`.`nestedJson`, `$cb_c3_nestedJson_nestedJson_nestedJson_Dimension` = `$cb_t1`.`nestedJson`.`nestedJson`.`nestedJson`.`Dimension`, `$cb_c4_nestedJson_nestedJson_Dimension` = `$cb_t1`.`nestedJson`.`nestedJson`.`Dimension`, `$cb_c5_nestedJson_Dimension` = `$cb_t1`.`nestedJson`.`Dimension`, `$cb_c6_Name` = `$cb_t1`.`Name`</entry>
   <entry key="n1ql.testWhereClause.type">SELECT `$cb_c1_Name`, `$cb_c2_type` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name`, `$cb_c2_type` = `$cb_t1`.`type` WHERE `$cb_c2_type` = 'Customer' AND `$cb_c2_type` = 'Customer'</entry>
   <entry key="n1ql.testOrderByClause.Customer.NullOrdering">SELECT `$cb_c1_Name`, `$cb_c2_type` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name`, `$cb_c2_type` = `$cb_t1`.`type` WHERE `$cb_c2_type` = 'Customer' ORDER BY `$cb_c2_type`</entry>
   <entry key="n1ql.Procedures.getTextDocuments">SELECT META().id AS id, result FROM `test` AS result WHERE META().id LIKE '%e%'</entry>
   <entry key="n1ql.testWhereClause.duplicated">SELECT `$cb_c1_Name`, `$cb_c2_type` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name`, `$cb_c2_type` = `$cb_t1`.`type` WHERE `$cb_c2_type` = 'Customer'</entry>
   <entry key="n1ql.StringFunctions.LCASE">SELECT LOWER(`$cb_c1_attr_string`) FROM `T2` `$cb_t1` LET `$cb_c1_attr_string` = `$cb_t1`.`attr_string`</entry>
   <entry key="n1ql.testSelect.Customer.distinct">SELECT DISTINCT `$cb_c1_Name` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name` WHERE `$cb_t1`.`type` = 'Customer'</entry>
   <entry key="n1ql.Procedures.getTextMetadataDocument">SELECT META(`test`) AS result FROM `test`</entry>
   <entry key="n1ql.testNestedJson.T3">SELECT `$cb_c1_documentID`, `$cb_c2_nestedJson_nestedJson_nestedJson_nestedJson`, `$cb_c3_nestedJson_nestedJson_nestedJson_Dimension`, `$cb_c4_nestedJson_nestedJson_Dimension`, `$cb_c5_nestedJson_Dimension`, `$cb_c6_Name` FROM `T3` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t1`).id, `$cb_c2_nestedJson_nestedJson_nestedJson_nestedJson` = `$cb_t1`.`nestedJson`.`nestedJson`.`nestedJson`.`nestedJson`, `$cb_c3_nestedJson_nestedJson_nestedJson_Dimension` = `$cb_t1`.`nestedJson`.`nestedJson`.`nestedJson`.`Dimension`, `$cb_c4_nestedJson_nestedJson_Dimension` = `$cb_t1`.`nestedJson`.`nestedJson`.`Dimension`, `$cb_c5_nestedJson_Dimension` = `$cb_t1`.`nestedJson`.`Dimension`, `$cb_c6_Name` = `$cb_t1`.`Name`</entry>
   <entry key="n1ql.DateFunctions.CLOCK_STR">SELECT CLOCK_STR('2006-01-02') FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testWhereClause.Name">SELECT `$cb_c1_Name`, `$cb_c2_type` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name`, `$cb_c2_type` = `$cb_t1`.`type` WHERE `$cb_c1_Name` = 'John Doe' AND `$cb_c2_type` = 'Customer'</entry>
   <entry key="n1ql.testNumbericFunctions.LOG10">SELECT LOG(`$cb_c1_attr_double`) FROM `T2` `$cb_t1` LET `$cb_c1_attr_double` = `$cb_t1`.`attr_double`</entry>
   <entry key="n1ql.StringFunctions.TRANSLATE">SELECT REPLACE(`$cb_c1_attr_string`, 'is', 'are') FROM `T2` `$cb_t1` LET `$cb_c1_attr_string` = `$cb_t1`.`attr_string`</entry>
   <entry key="n1ql.StringFunctions.TRIM">SELECT TRIM(`$cb_c1_attr_string`, 'is') FROM `T2` `$cb_t1` LET `$cb_c1_attr_string` = `$cb_t1`.`attr_string`</entry>
   <entry key="n1ql.testWhereClause.unrelated">SELECT `$cb_c1_Name` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name` WHERE `$cb_t1`.`type` = 'Customer'</entry>
   <entry key="n1ql.testSelect.Customer.all">SELECT `$cb_c1_Name` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name` WHERE `$cb_t1`.`type` = 'Customer'</entry>
   <entry key="n1ql.testWhereClause.unrelated.where">SELECT `$cb_c1_Name` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name`, `$cb_c2_documentID` = META(`$cb_t1`).id WHERE `$cb_c2_documentID` = 'customer' AND `$cb_t1`.`type` = 'Customer'</entry>
   <entry key="n1ql.DateFunctions.DATE_ADD_STR">SELECT DATE_ADD_STR('2017-03-08', 2, 'century') FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.StringFunctions.LTRIM">SELECT LTRIM(`$cb_c1_attr_string`, 'This') FROM `T2` `$cb_t1` LET `$cb_c1_attr_string` = `$cb_t1`.`attr_string`</entry>
   <entry key="n1ql.testLimitOffsetClause.Customer.limit">SELECT `$cb_c1_Name` FROM `test` `$cb_t1` LET `$cb_c1_Name` = `$cb_t1`.`Name` WHERE `$cb_t1`.`type` = 'Customer' LIMIT 2</entry>
   <entry key="n1ql.Procedures.saveDocument">UPSERT INTO `test` (KEY, VALUE) VALUES ('k001', '{"key": "value"}')</entry>
   <entry key="n1ql.testNumbericFunctions.LOG">SELECT LN(`$cb_c1_attr_double`) FROM `T2` `$cb_t1` LET `$cb_c1_attr_double` = `$cb_t1`.`attr_double`</entry>
   <entry key="n1ql.testSelect.Oder">SELECT `$cb_c1_documentID`, `$cb_c2_CustomerID`, `$cb_c3_type`, `$cb_c4_CreditCard_CardNumber`, `$cb_c5_CreditCard_Type`, `$cb_c6_CreditCard_CVN`, `$cb_c7_CreditCard_Expiry`, `$cb_c8_Name` FROM `test` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t1`).id, `$cb_c2_CustomerID` = `$cb_t1`.`CustomerID`, `$cb_c3_type` = `$cb_t1`.`type`, `$cb_c4_CreditCard_CardNumber` = `$cb_t1`.`CreditCard`.`CardNumber`, `$cb_c5_CreditCard_Type` = `$cb_t1`.`CreditCard`.`Type`, `$cb_c6_CreditCard_CVN` = `$cb_t1`.`CreditCard`.`CVN`, `$cb_c7_CreditCard_Expiry` = `$cb_t1`.`CreditCard`.`Expiry`, `$cb_c8_Name` = `$cb_t1`.`Name` WHERE `$cb_c3_type` = 'Oder'</entry>
   <entry key="n1ql.Procedures.getMetadataDocument">SELECT META(`test`) AS result FROM `test`</entry>
   <entry key="n1ql.Procedures.deleteDocument">DELETE FROM `test` USE PRIMARY KEYS 'k001'</entry>
   <entry key="n1ql.testNumbericFunctions.RAND">SELECT RANDOM(`$cb_c1_attr_integer`) FROM `T2` `$cb_t1` LET `$cb_c1_attr_integer` = `$cb_t1`.`attr_integer`</entry>
</properties>
