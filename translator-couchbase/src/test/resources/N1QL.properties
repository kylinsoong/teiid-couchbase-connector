<?xml version="1.0" encoding="UTF-8"?>
<properties>
   <entry key="n1ql.testSelect.Customer_SavedAddresses">SELECT `$cb_c1_documentID`, `$cb_c2_Customer_SavedAddresses_idx`, `$cb_c3_Customer_SavedAddresses` FROM `test` `$cb_t2` UNNEST `$cb_t2`.`SavedAddresses` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t2`).id ,`$cb_c2_Customer_SavedAddresses_idx` = UNNEST_POSITION(`$cb_t1`),`$cb_c3_Customer_SavedAddresses` = `$cb_t1`</entry>
   <entry key="n1ql.testNestedArray.T3_nestedArray_dim2_dim3_dim4">SELECT `$cb_c1_documentID`, `$cb_c2_T3_nestedArray_idx`, `$cb_c3_T3_nestedArray_dim2_idx`, `$cb_c4_T3_nestedArray_dim2_dim3_idx`, `$cb_c5_T3_nestedArray_dim2_dim3_dim4_idx`, `$cb_c6_T3_nestedArray_dim2_dim3_dim4` FROM `T3` `$cb_t5` UNNEST `$cb_t5`.`nestedArray` `$cb_t4` UNNEST `$cb_t4` `$cb_t3` UNNEST `$cb_t3` `$cb_t2` UNNEST `$cb_t2` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t5`).id ,`$cb_c2_T3_nestedArray_idx` = UNNEST_POSITION(`$cb_t4`),`$cb_c3_T3_nestedArray_dim2_idx` = UNNEST_POSITION(`$cb_t3`),`$cb_c4_T3_nestedArray_dim2_dim3_idx` = UNNEST_POSITION(`$cb_t2`),`$cb_c5_T3_nestedArray_dim2_dim3_dim4_idx` = UNNEST_POSITION(`$cb_t1`),`$cb_c6_T3_nestedArray_dim2_dim3_dim4` = `$cb_t1`</entry>
   <entry key="n1ql.ConversionFunctions.T2">SELECT TOSTRING(`$cb_t1`.`attr_long` `$cb_c1`) FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testPKColumn.T3">SELECT META(`$cb_t1`).id `$cb_c1` FROM `T3` `$cb_t1`</entry>
   <entry key="n1ql.StringFunctions.TITLE">SELECT TITLE(`$cb_t1`.`attr_string` `$cb_c1`) FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testLimitOffsetClause.Customer.limitoffset">SELECT `$cb_t1`.`Name` `$cb_c1` FROM `test` `$cb_t1` WHERE `$cb_t1`.`type` = 'Customer' LIMIT 2 OFFSET 2</entry>
   <entry key="n1ql.testNestedArray.T3_nestedArray_dim2">SELECT `$cb_c1_documentID`, `$cb_c2_T3_nestedArray_idx`, `$cb_c3_T3_nestedArray_dim2_idx`, `$cb_c4_T3_nestedArray_dim2` FROM `T3` `$cb_t3` UNNEST `$cb_t3`.`nestedArray` `$cb_t2` UNNEST `$cb_t2` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t3`).id ,`$cb_c2_T3_nestedArray_idx` = UNNEST_POSITION(`$cb_t2`),`$cb_c3_T3_nestedArray_dim2_idx` = UNNEST_POSITION(`$cb_t1`),`$cb_c4_T3_nestedArray_dim2` = `$cb_t1`</entry>
   <entry key="n1ql.testOrderByClause.Customer.Unrelated">SELECT `$cb_t1`.`type` `$cb_c1` FROM `test` `$cb_t1` WHERE `$cb_t1`.`type` = 'Customer' ORDER BY null</entry>
   <entry key="n1ql.StringFunctions.CONTAINS">SELECT CONTAINS(`$cb_t1`.`attr_string` `$cb_c1`, 'is') FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.Procedures.">SELECT result FROM `test` AS result WHERE META().id LIKE 'customer'</entry>
   <entry key="n1ql.testNumbericFunctions.CEILING">SELECT CEIL(`$cb_t1`.`attr_double` `$cb_c1`) FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.StringFunctions.UCASE">SELECT UPPER(`$cb_t1`.`attr_string` `$cb_c1`) FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testSelect.Customer">SELECT META(`$cb_t1`).id `$cb_c1`, `$cb_t1`.`ID` `$cb_c2`, `$cb_t1`.`type` `$cb_c3`, `$cb_t1`.`Name` `$cb_c4` FROM `test` `$cb_t1` WHERE `$cb_t1`.`type` = 'Customer'</entry>
   <entry key="n1ql.StringFunctions.RTRIM">SELECT RTRIM(`$cb_t1`.`attr_string` `$cb_c1`, 'value') FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testOrderByClause.Customer">SELECT `$cb_t1`.`Name` `$cb_c1`, `$cb_t1`.`type` `$cb_c2` FROM `test` `$cb_t1` WHERE `$cb_t1`.`type` = 'Customer' ORDER BY `$cb_c1`</entry>
   <entry key="n1ql.StringFunctions.POSITION">SELECT POSITION(`$cb_t1`.`attr_string` `$cb_c1`, 'is') FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.Procedures.getDocuments">SELECT META().id AS id, result FROM `test` AS result USE PRIMARY KEYS 'customer'</entry>
   <entry key="n1ql.testGroupByClause.Name">SELECT `$cb_t1`.`Name` `$cb_c1`, COUNT(*) FROM `test` `$cb_t1` WHERE `$cb_t1`.`type` = 'Customer' GROUP BY `$cb_c1`</entry>
   <entry key="n1ql.testLimitOffsetClause.Customer.offset">SELECT `$cb_t1`.`Name` `$cb_c1` FROM `test` `$cb_t1` WHERE `$cb_t1`.`type` = 'Customer' LIMIT 2147483647 OFFSET 2</entry>
   <entry key="n1ql.testNestedArray.T3_nestedArray">SELECT `$cb_c1_documentID`, `$cb_c2_T3_nestedArray_idx`, `$cb_c3_T3_nestedArray` FROM `T3` `$cb_t2` UNNEST `$cb_t2`.`nestedArray` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t2`).id ,`$cb_c2_T3_nestedArray_idx` = UNNEST_POSITION(`$cb_t1`),`$cb_c3_T3_nestedArray` = `$cb_t1`</entry>
   <entry key="n1ql.testWhereClause.documentID">SELECT `$cb_t1`.`Nsame` `$cb_c1`, `$cb_t1`.`type` `$cb_c2` FROM `test` `$cb_t1` WHERE null = 'customer' AND `$cb_t1`.`type` = 'Customer'</entry>
   <entry key="n1ql.testNestedArray.T3_nestedArray_dim2_dim3">SELECT `$cb_c1_documentID`, `$cb_c2_T3_nestedArray_idx`, `$cb_c3_T3_nestedArray_dim2_idx`, `$cb_c4_T3_nestedArray_dim2_dim3_idx`, `$cb_c5_T3_nestedArray_dim2_dim3` FROM `T3` `$cb_t4` UNNEST `$cb_t4`.`nestedArray` `$cb_t3` UNNEST `$cb_t3` `$cb_t2` UNNEST `$cb_t2` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t4`).id ,`$cb_c2_T3_nestedArray_idx` = UNNEST_POSITION(`$cb_t3`),`$cb_c3_T3_nestedArray_dim2_idx` = UNNEST_POSITION(`$cb_t2`),`$cb_c4_T3_nestedArray_dim2_dim3_idx` = UNNEST_POSITION(`$cb_t1`),`$cb_c5_T3_nestedArray_dim2_dim3` = `$cb_t1`</entry>
   <entry key="n1ql.testSelect.Oder_Items">SELECT `$cb_c1_documentID`, `$cb_c2_Oder_Items_idx`, `$cb_c3_Oder_Items_Quantity`, `$cb_c4_Oder_Items_ItemID` FROM `test` `$cb_t2` UNNEST `$cb_t2`.`Items` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t2`).id ,`$cb_c2_Oder_Items_idx` = UNNEST_POSITION(`$cb_t1`),`$cb_c3_Oder_Items_Quantity` = `$cb_t1`.`Quantity`,`$cb_c4_Oder_Items_ItemID` = `$cb_t1`.`ItemID`</entry>
   <entry key="n1ql.testPKColumn.T3_nestedArray_dim2_dim3_dim4">SELECT `$cb_c1_documentID` FROM `T3` `$cb_t1` LET `$cb_c1_documentID` = META(`$cb_t1`).id </entry>
   <entry key="n1ql.Procedures.getDocument">SELECT result FROM `test` AS result USE PRIMARY KEYS 'customer'</entry>
   <entry key="n1ql.DateFunctions.DATE_ADD_MILLIS">SELECT DATE_ADD_MILLIS(1488873653696, 2, 'century') FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testNestedArray.T3">SELECT META(`$cb_t1`).id `$cb_c1`, `$cb_t1`.`nestedJson`.`nestedJson`.`nestedJson`.`nestedJson` `$cb_c2`, `$cb_t1`.`nestedJson`.`nestedJson`.`nestedJson`.`Dimension` `$cb_c3`, `$cb_t1`.`nestedJson`.`nestedJson`.`Dimension` `$cb_c4`, `$cb_t1`.`nestedJson`.`Dimension` `$cb_c5`, `$cb_t1`.`Name` `$cb_c6` FROM `T3` `$cb_t1`</entry>
   <entry key="n1ql.DateFunctions.CLOCK_MILLIS">SELECT CLOCK_MILLIS() FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testOrderByClause.Customer.NullOrdering">SELECT `$cb_t1`.`Name` `$cb_c1`, `$cb_t1`.`type` `$cb_c2` FROM `test` `$cb_t1` WHERE `$cb_t1`.`type` = 'Customer' ORDER BY `$cb_c2`</entry>
   <entry key="n1ql.Procedures.getTextDocuments">SELECT META().id AS id, result FROM `test` AS result WHERE META().id LIKE '%e%'</entry>
   <entry key="n1ql.StringFunctions.LCASE">SELECT LOWER(`$cb_t1`.`attr_string` `$cb_c1`) FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testSelect.Customer.distinct">SELECT DISTINCT `$cb_t1`.`Name` `$cb_c1` FROM `test` `$cb_t1` WHERE `$cb_t1`.`type` = 'Customer'</entry>
   <entry key="n1ql.testNestedJson.T3">SELECT META(`$cb_t1`).id `$cb_c1`, `$cb_t1`.`nestedJson`.`nestedJson`.`nestedJson`.`nestedJson` `$cb_c2`, `$cb_t1`.`nestedJson`.`nestedJson`.`nestedJson`.`Dimension` `$cb_c3`, `$cb_t1`.`nestedJson`.`nestedJson`.`Dimension` `$cb_c4`, `$cb_t1`.`nestedJson`.`Dimension` `$cb_c5`, `$cb_t1`.`Name` `$cb_c6` FROM `T3` `$cb_t1`</entry>
   <entry key="n1ql.Procedures.getTextMetadataDocument">SELECT META(`test`) AS result FROM `test`</entry>
   <entry key="n1ql.DateFunctions.CLOCK_STR">SELECT CLOCK_STR('2006-01-02') FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.DateFunctions.CLOCK_STR.T2">SELECT CLOCK_STR() FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testNumbericFunctions.LOG10">SELECT LOG(`$cb_t1`.`attr_double` `$cb_c1`) FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testWhereClause.Name">SELECT `$cbs_ts1`.`Name` `$cb_c1`, `$cb_t1`.`type` `$cb_c2` FROM `test` `$cb_t1` WHERE `$cb_c1` = 'John Doe' AND `$cb_t1`.`type` = 'Customer'</entry>
   <entry key="n1ql.StringFunctions.TRANSLATE">SELECT REPLACE(`$cb_t1`.`attr_string` `$cb_c1`, 'is', 'are') FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.StringFunctions.TRIM">SELECT TRIM(`$cb_t1`.`attr_string` `$cb_c1`, 'is') FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testSelect.Customer.all">SELECT `$cb_t1`.`Name` `$cb_c1` FROM `test` `$cb_t1` WHERE `$cb_t1`.`type` = 'Customer'</entry>
   <entry key="n1ql.DateFunctions.DATE_ADD_STR">SELECT DATE_ADD_STR('2017-03-08', 2, 'century') FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.StringFunctions.LTRIM">SELECT LTRIM(`$cb_t1`.`attr_string` `$cb_c1`, 'This') FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testLimitOffsetClause.Customer.limit">SELECT `$cb_t1`.`Name` `$cb_c1` FROM `test` `$cb_t1` WHERE `$cb_t1`.`type` = 'Customer' LIMIT 2</entry>
   <entry key="n1ql.Procedures.saveDocument">UPSERT INTO `test` (KEY, VALUE) VALUES ('k001', '{"key": "value"}')</entry>
   <entry key="n1ql.testNumbericFunctions.LOG">SELECT LN(`$cb_t1`.`attr_double` `$cb_c1`) FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.testSelect.Oder">SELECT META(`$cb_t1`).id `$cb_c1`, `$cb_t1`.`CustomerID` `$cb_c2`, `$cb_t1`.`type` `$cb_c3`, `$cb_t1`.`CreditCard`.`CardNumber` `$cb_c4`, `$cb_t1`.`CreditCard`.`Type` `$cb_c5`, `$cb_t1`.`CreditCard`.`CVN` `$cb_c6`, `$cb_t1`.`CreditCard`.`Expiry` `$cb_c7`, `$cb_t1`.`Name` `$cb_c8` FROM `test` `$cb_t1` WHERE `$cb_t1`.`type` = 'Oder'</entry>
   <entry key="n1ql.Procedures.getMetadataDocument">SELECT META(`test`) AS result FROM `test`</entry>
   <entry key="n1ql.testNumbericFunctions.RAND">SELECT RANDOM(`$cb_t1`.`attr_integer` `$cb_c1`) FROM `T2` `$cb_t1`</entry>
   <entry key="n1ql.Procedures.deleteDocument">DELETE FROM `test` USE PRIMARY KEYS 'k001'</entry>
</properties>
